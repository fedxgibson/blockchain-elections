services:
  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "8000:8000"
      - "9222:9222" # Chrome DevTools
      - "9229:9229" # Node.js debugger
    depends_on:
      webapp:
        condition: service_healthy
      server:
        condition: service_healthy

  webapp:
    build: ./webapp
    command: npm run dev
    environment:
      - NODE_ENV=development
      - API_URL=/api
      - JWT_SECRET=${JWT_SECRET:-random}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "http://localhost:3000/login"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - ./webapp:/app
      - webapp_node_modules:/app/node_modules

  blockchain:
    build: ./blockchain
    command: >
      sh -c "cd /app && rm -rf artifacts cache ignition/deployments &&
      npx hardhat node --hostname 0.0.0.0 &
      sleep 5 &&
      npx hardhat run scripts/deploy.js --network docker &&
      tail -f /dev/null"
    environment:
      - NODE_ENV=development
    ports:
      - 8545:8545
    volumes:
      - ./blockchain:/app
      - blockchain_data:/root/.hardhat
      - shared_data:/shared

  server:
    build: ./server
    command: >
      sh -c " sleep 30 &&
      if [ -f /shared/contract-address.txt ]; then
        export CONTRACT_ADDRESS=$$(cat /shared/contract-address.txt);
      fi &&
      npm run dev"
    environment:
      - NODE_ENV=development
      - LOG_LEVEL=debug
      - PORT=3001
      - HOST=0.0.0.0
      - ETHEREUM_PROVIDER=http://blockchain:8545
    depends_on:
      - blockchain
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    volumes:
      - ./server:/app
      - server_node_modules:/app/node_modules
      - shared_data:/shared
volumes:
  webapp_node_modules:
  server_node_modules:
  blockchain_data:
  shared_data:
